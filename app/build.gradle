buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
    }
}
plugins {
    id "me.tatarka.retrolambda" version "3.7.0"
}

apply plugin: 'com.android.application'

// Required because retrolambda is on maven central
repositories {
    mavenCentral()
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.0'
    defaultConfig {
        applicationId "com.Cassio.app.cassio"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()

    maven {
        url "http://dl.bintray.com/journeyapps/maven"
    }
}


dependencies {
    testCompile 'org.mockito:mockito-core:1.10.19'

    // https://mvnrepository.com/artifact/com.j256.ormlite/ormlite-core
    compile group: 'com.j256.ormlite', name: 'ormlite-core', version: '5.0'
    compile group: 'com.j256.ormlite', name: 'ormlite-android', version: '5.0'


    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile files('libs/ormlite-android-5.0.jar')
    compile files('libs/ormlite-core-5.0.jar')
    compile files('libs/ormlite-jdbc-5.0.jar')
    // GCM Network Manager
    // Supports Android 4.0.3 and later (API level 15)
    // Supports Android 2.1 and later (API level 7), but not optimal for later Android versions.
    // If you only plan on supporting Android 4.0.3 and up, you don't need to include this.
    // Convenience library to launch the scanning and encoding Activities.
    // It automatically picks the best scanning library from the above two, depending on the
    // Android version and what is available.
    // Version 3.0.x of zxing core contains some code that is not compatible on Android 2.2 and earlier.
    // This mostly affects encoding, but you should test if you plan to support these versions.
    // Older versions e.g. 2.2 may also work if you need support for older Android versions.
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.jakewharton:butterknife:8.6.0'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.android.gms:play-services-gcm:10.2.6'
    compile 'com.journeyapps:zxing-android-embedded:2.0.1@aar'
    compile 'com.journeyapps:zxing-android-legacy:2.0.1@aar'
    compile 'com.journeyapps:zxing-android-integration:2.0.1@aar'
    compile 'com.google.zxing:core:3.0.1'
    compile 'com.github.johnpersano:supertoasts:2.0'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
}
